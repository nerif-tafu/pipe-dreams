name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install SteamCMD dependencies
      run: |
        # Install SteamCMD dependencies for Linux
        sudo apt-get update
        sudo apt-get install -y lib32gcc-s1 libcurl4 libcurl4-openssl-dev
      
    - name: Build application
      run: npm run build
      
    - name: Verify build output
      run: |
        echo "Build directory contents:"
        ls -la build/ || echo "Build directory not found, checking current directory:"
        ls -la
        echo "=== Build directory structure ==="
        find build/ -type f -name "*.js" | head -10 || echo "No JS files found in build"
        
    - name: Create deployment directory
      run: |
        # Create deployment directory with proper permissions
        sudo mkdir -p /var/www/pipe-dreams
        sudo chown -R $USER:$USER /var/www/pipe-dreams
        
    - name: Deploy Node.js application
      run: |
        # Copy built files to web server directory
        cp -r build/* /var/www/pipe-dreams/
        cp package.json /var/www/pipe-dreams/
        cp package-lock.json /var/www/pipe-dreams/
        
        # Create dedicated user for the application with sudo access (FIRST!)
        sudo useradd -m -s /bin/bash pipe-dreams-user || echo "User already exists"
        echo "pipe-dreams-user ALL=(ALL) NOPASSWD: /usr/bin/mkdir, /usr/bin/chmod, /usr/bin/chown, /usr/bin/tar, /usr/bin/rm" | sudo tee /etc/sudoers.d/pipe-dreams-user
        
        # Install production dependencies
        cd /var/www/pipe-dreams
        npm ci --production
        
        # Set proper permissions for the new user
        sudo chown -R pipe-dreams-user:pipe-dreams-user /var/www/pipe-dreams
        sudo chmod -R 755 /var/www/pipe-dreams
        
        # Create SteamCMD directory with proper permissions for downloads
        sudo mkdir -p /var/www/pipe-dreams/steamcmd
        sudo chown -R pipe-dreams-user:pipe-dreams-user /var/www/pipe-dreams/steamcmd
        sudo chmod -R 755 /var/www/pipe-dreams/steamcmd
        
        # Debug: Check what files are actually in the deployment directory
        echo "=== Deployment directory contents ==="
        ls -la /var/www/pipe-dreams/
        echo "=== Build directory contents ==="
        ls -la /var/www/pipe-dreams/build/ || echo "No build directory found"
        
        # Create systemd service file
        sudo tee /etc/systemd/system/pipe-dreams.service > /dev/null <<EOF
        [Unit]
        Description=Pipe Dreams SvelteKit App
        After=network.target
        
        [Service]
        Type=simple
        User=pipe-dreams-user
        WorkingDirectory=/var/www/pipe-dreams
        ExecStart=/usr/bin/node index.js
        Restart=always
        RestartSec=10
        Environment=NODE_ENV=production
        Environment=PORT=3000
        
        [Install]
        WantedBy=multi-user.target
        EOF
        
        # Reload systemd and enable/start service
        sudo systemctl daemon-reload
        sudo systemctl enable pipe-dreams
        sudo systemctl restart pipe-dreams
        
        # Check if service started successfully
        echo "=== Service Status ==="
        sudo systemctl status pipe-dreams --no-pager -l
        
        # Check if port 3000 is listening
        echo "=== Port Check ==="
        sudo netstat -tlnp | grep :3000 || echo "Port 3000 not listening"
        
        # Test the API endpoint locally
        echo "=== API Test ==="
        curl -v http://localhost:3000/api/test || echo "API test failed"
        
        # Test SteamCMD endpoint
        echo "=== SteamCMD API Test ==="
        curl -v http://localhost:3000/api/steamcmd/check || echo "SteamCMD API test failed"
        
        # Test debug endpoint
        echo "=== Debug API Test ==="
        curl -v http://localhost:3000/api/debug || echo "Debug API test failed"
        
        # Check service logs
        echo "=== Recent Service Logs ==="
        sudo journalctl -u pipe-dreams --no-pager -l -n 10
        
    - name: Deploy success notification
      run: |
        echo "✅ Deployment completed successfully!"
        echo "🌐 Your app is now live at: https://pipes.tafu.casa"
        echo "📁 Deployed from: $(pwd)/build"
        echo "📁 Deployed to: /var/www/pipe-dreams"
